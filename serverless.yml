service: pedirPizza

provider:
  name: aws
  runtime: nodejs12.x
  region: us-east-1
  stage: ${opt:stage, 'dev'}
  apiKeys:
    - ${file(./config.${self:provider.stage}.json):API_KEY}
  environment:
    REGION: ${self:provider.region}
    PENDING_ORDER_QUEUE:
      Ref: PendingOrdersQueue
    PENDING_ORDER_QUEUE_NAME: PendingOrdersQueue
    COMPLETED_ORDER_TABLE: CompletedOrderTable
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "sqs:SendMessage"
      Resource: "arn:aws:sqs:${self:provider.region}:*:${self:provider.environment.PENDING_ORDER_QUEUE_NAME}"
    - Effect: "Allow"
      Action:
        - "dynamodb:GetItem"
        - "dynamodb:PutItem"
        - "dynamodb:UpdateItem"
        - "dynamodb:DeleteItem"    
      Resource:
        - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.COMPLETED_ORDER_TABLE}"  
functions:
  pedido:
    handler: handler.pedido
    events:
      - http:
          path: pedido
          method: post
          private: true
  
  prepararPedido:
    handler: handler.prepararPedido
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - PendingOrdersQueue
              - Arn
          batchSize: 1
  
  enviarPedido:
    handler: handler.enviarPedido
    events:
      - stream:
          type: dynamodb
          batchSize: 1
          startingPosition: LATEST
          arn:
            Fn::GetAtt:
              - CompletedOrdersTable
              - StreamArn
  
  consultarPedido:
    handler: handler.consultarPedido
    events:
      - http:
          path: pedido/{orderId}
          method: get
          private: true

resources:
  Resources:
    PendingOrdersQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: ${self:provider.environment.PENDING_ORDER_QUEUE_NAME}
    CompletedOrdersTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          -
            AttributeName: "orderId"
            AttributeType: "S"   
        KeySchema:
          -
            AttributeName: "orderId"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.COMPLETED_ORDER_TABLE}
        StreamSpecification:
          StreamViewType: NEW_IMAGE
